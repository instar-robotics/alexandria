<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<description>
        <libname>nav</libname>
	<functions>
		<function>
                        <name>OdoPos</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.position and load the 3 values into a Matrix [Dimension of the Matrix must be 3]</desc>
                </function>
		<function>
                        <name>OdoPosX</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.position.x and load the value into a Scalar</desc>
                </function>
		<function>
                        <name>OdoPosY</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.position.y and load the value into a Scalar</desc>
                </function>
		<function>
                        <name>OdoPosZ</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.position.z and load the value into a Scalar</desc>
                </function>
		<function>
                        <name>OdoEuler</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion, convert into Euler representation (Roll, pitch, yaw) and load the 3 values into a Matrix [Dimension of the Matrix must be 3]</desc>
                </function>
                <function>
                        <name>OdoEulerRoll</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion, convert into Euler representation (Roll, pitch, yaw) and load roll value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoEulerPitch</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion, convert into Euler representation (Roll, pitch, yaw) and load pitch value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoEulerYaw</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion, convert into Euler representation (Roll, pitch, yaw) and load yaw value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoQuater</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion and load the 4 values into a Matrix [Dimension of the Matrix must be 4]</desc>
                </function>
                <function>
                        <name>OdoQuaterX</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion and load the X value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoQuaterY</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion and load the Y value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoQuaterZ</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion and load the Z value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoQuaterW</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.pose.orientation quaternion and load the W value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoTwistLin</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.linear and load the values into a Matrix [Dimension of the Matrix must be 3]</desc>
                </function>
                <function>
                        <name>OdoTwistLinX</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.linear and load the X value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoTwistLinY</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.linear and load the Y value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoTwistLinZ</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.linear and load the Z value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoTwistAng</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.angular (in Euler representation) and load the values into a Matrix [Dimension of the Matrix must be 3]</desc>
                </function>
                <function>
                        <name>OdoTwistAngRoll</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.angular (in Euler representation) and load the roll value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoTwistAngPitch</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.angular (in Euler representation) and load the pitch value into a Scalar</desc>
                </function>
                <function>
                        <name>OdoTwistAngYaw</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>odometry.svg</icon>
                        <desc>Read nav_msgs/Odometry.twist.angular (in Euler representation) and load the yaw value into a Scalar</desc>
                </function>
        </functions>
</description>

