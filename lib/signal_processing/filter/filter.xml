<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<description>
	<libname>filter</libname>
	<functions>
		<function>
			<name>SFrontDetection</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="SCALAR_SCALAR">
					<name>inScalar</name>
					<desc>Input scalar</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>threshold</name>
					<desc>Threshold value</desc>
				</input>
				<input  type="STRING">
					<name>mode</name>
					<desc>Mode : drive the funtion behavior ["up" : trigger only on rising edge; "down" : trigger only on falling edge; "both" : trigger on rising and falling edge] </desc>
				</input>
			</inputs>
			<icon>Scalar-Front_Detection.svg</icon>
			<desc>Output is set to 1 only when the input crossed the threshold (falling, rising or both)</desc>
		</function>
		<function>
			<name>MFrontDetection</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>threshold</name>
					<desc>Threshold value</desc>
				</input>
				<input  type="STRING">
					<name>mode</name>
					<desc>Mode : drive the funtion behavior ["up" : trigger only on rising edge; "down" : trigger only on falling edge; "both" : trigger on rising and falling edge] </desc>
				</input>
			</inputs>
			<icon>Matrix-Front_Detection.svg</icon>
			<desc>Output is set to 1 only when an input crossed the threshold (falling, rising or both). The output is computed separately for each term of the input matrix</desc>
		</function>
		<function>
			<name>MMFrontDetection</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
				<input  type="SCALAR_MATRIX">
					<name>threshold</name>
					<desc>Threshold value</desc>
				</input>
				<input  type="STRING">
					<name>mode</name>
					<desc>Mode : drive the funtion behavior ["up" : trigger only on rising edge; "down" : trigger only on falling edge; "both" : trigger on rising and falling edge] </desc>
				</input>
			</inputs>
			<icon>Matrix-Matrix-Front_Detection.svg</icon>
			<desc>Output is set to 1 only when an input crossed the threshold (falling, rising or both). The output is computed separately for each term of the input matrix with a thresold for each term.</desc>
		</function>
		<function>
			<name>MPiecewiseLin</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
			</inputs>
			<icon>Matrix-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [0,1] and set to 1 when value greater than 1 and set to 0 when lower than 0</desc>
		</function>
		<function>
			<name>SPiecewiseLin</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="SCALAR_SCALAR">
					<name>inScalar</name>
					<desc>Input scalar</desc>
				</input>
			</inputs>
			<icon>Scalar-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [0,1] and set to 1 when value greater than 1 and set to 0 when lower than 0</desc>
		</function>
		<function>
			<name>MPiecewiseLinCustom</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
				<input  type="SCALAR_MATRIX">
					<name>thresMin</name>
					<desc>Lower bound</desc>
				</input>
				<input  type="SCALAR_MATRIX">
					<name>thresMax</name>
					<desc>Upper bound</desc>
				</input>
			</inputs>
			<icon>Matrix-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [thresMin,thresMax] and set to tresMax when value greater than thresMax and set to thresMin when lower than thresMin</desc>
		</function>
		<function>
			<name>SPiecewiseLinCustom</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="SCALAR_SCALAR">
					<name>inScalar</name>
					<desc>Input scalar</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>thresMin</name>
					<desc>Lower bound</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>thresMax</name>
					<desc>Upper bound</desc>
				</input>
			</inputs>
			<icon>Scalar-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [thresMin,thresMax] and set to tresMax when value greater than thresMax and set to thresMin when lower than thresMin</desc>
		</function>
		<function>
			<name>MSSPiecewiseLinCustom</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>thresMin</name>
					<desc>Lower bound</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>thresMax</name>
					<desc>Upper bound</desc>
				</input>
			</inputs>
			<icon>Scalar-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [thresMin,thresMax] and set to tresMax when value greater than thresMax and set to thresMin when lower than thresMin</desc>
		</function>
		<function>
			<name>MMSPiecewiseLinCustom</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
				<input  type="SCALAR_MATRIX">
					<name>thresMin</name>
					<desc>Lower bound</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>thresMax</name>
					<desc>Upper bound</desc>
				</input>
			</inputs>
			<icon>Matrix-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [thresMin,thresMax] and set to tresMax when value greater than thresMax and set to thresMin when lower than thresMin</desc>
		</function>
		<function>
			<name>MSMPiecewiseLinCustom</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>thresMin</name>
					<desc>Lower bound</desc>
				</input>
				<input  type="SCALAR_MATRIX">
					<name>thresMax</name>
					<desc>Upper bound</desc>
				</input>
			</inputs>
			<icon>Matrix-PiecewiseLin.svg</icon>
			<desc>Output is linear on interval [thresMin,thresMax] and set to tresMax when value greater than thresMax and set to thresMin when lower than thresMin</desc>
		</function>
		<function>
			<name>MHeaviside</name>
			<output type="MATRIX">
			</output>
			<inputs>
				<input  type="SCALAR_MATRIX">
					<name>inMatrix</name>
					<desc>Input matrix</desc>
				</input>
			</inputs>
			<icon>Matrix-Heaviside.svg</icon>
			<desc>Output are egals to 1 if inputs are greater than 0, 0 otherwise</desc>
		</function>
		<function>
			<name>SHeaviside</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="SCALAR_SCALAR">
					<name>inScalar</name>
					<desc>Input scalar</desc>
				</input>
			</inputs>
			<icon>Scalar-Heaviside.svg</icon>
			<desc>Output is egal to 1 if input is greater than 0, 0 otherwise</desc>
		</function>
		<function>
                        <name>MSHeavisideCustom</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="SCALAR_MATRIX">
                                        <name>inMatrix</name>
					<desc>Input matrix</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>thres</name>
					<desc>Thresold</desc>
                                </input>
                        </inputs>
                        <icon>Matrix-Scalar-Heaviside.svg</icon>
			<desc>Output are egals to 1 if inputs are greater than thres, 0 otherwise</desc>
                </function>
		<function>
                        <name>MMHeavisideCustom</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="SCALAR_MATRIX">
                                        <name>inMatrix</name>
					<desc>Input matrix</desc>
                                </input>
                                <input  type="SCALAR_MATRIX">
                                        <name>thres</name>
					<desc>Thresold. This input is a matrix, and threshold are applied term-term</desc>
                                </input>
                        </inputs>
                        <icon>Matrix-Matrix-Heaviside.svg</icon>
			<desc>Output are egals to 1 if inputs are greater than thres, 0 otherwise</desc>
                </function>
                <function>
                        <name>SHeavisideCustom</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="SCALAR_SCALAR">
                                        <name>inScalar</name>
					<desc>Input scalar</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>thres</name>
					<desc>Thresold</desc>
                                </input>
                        </inputs>
                        <icon>Scalar-Heaviside-custom.svg</icon>
			<desc>Output are egals to 1 if inputs are greater than thres, 0 otherwise</desc>
                </function>
		<function>
                        <name>SSigmoid</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="SCALAR_SCALAR">
                                        <name>inScalar</name>
                                        <desc>Input scalar</desc>
                                </input>
                        </inputs>
                        <icon></icon>
                        <desc>Sigmoid filter</desc>
                </function>
		<function>
                        <name>MSigmoid</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="SCALAR_MATRIX">
                                        <name>inMatrix</name>
                                        <desc>Input matrix</desc>
                                </input>
                        </inputs>
                        <icon></icon>
                        <desc>Sigmoid filter</desc>
                </function>
		<function>
                        <name>SSigmoidLambda</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="SCALAR_SCALAR">
                                        <name>inScalar</name>
                                        <desc>Input scalar</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>lambda</name>
                                        <desc>lambda coefficient : e^(lambda * x)</desc>
                                </input>
                        </inputs>
                        <icon></icon>
                        <desc>Sigmoid filter. General form </desc>
                </function>
		<function>
                        <name>MSSigmoidLambda</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="SCALAR_MATRIX">
                                        <name>inMatrix</name>
                                        <desc>Input matrix</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>lambda</name>
                                        <desc>lambda coefficient : e^(lambda * x)</desc>
                                </input>
                        </inputs>
                        <icon></icon>
                        <desc>Sigmoid filter. General form </desc>
                </function>
		<function>
                        <name>MMSigmoidLambda</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="SCALAR_MATRIX">
                                        <name>inMatrix</name>
                                        <desc>Input matrix</desc>
                                </input>
                                <input  type="SCALAR_MATRIX">
                                        <name>lambda</name>
                                        <desc>lambda coefficient : e^(lambda * x)</desc>
                                </input>
                        </inputs>
                        <icon></icon>
                        <desc>Sigmoid filter. General form </desc>
                </function>
	</functions>
</description>
