<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<description>
        <libname>sensors_sub</libname>
        <functions>
		<function>
                        <name>JoyAxesSub</name>
                        <output type="MATRIX" shape="VECT"> 
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>joyaxesinput.svg</icon>
                        <desc>Read sensor_msgs/Joy.axes and load value into a Matrix [Matrix dimension must be egal to the numbers of axes into the Joy message; the number of Axes depends on the joystick used]</desc>
                </function>
                <function>
                        <name>JoyAxeSub</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>axe</name>
                                        <desc>axe is an integer value : this is the index of the axe to read</desc>
                                </input>
                        </inputs>
                        <icon>joyaxeinput.svg</icon>
                        <desc>Read sensor_msgs/Joy.axes and load value associated to the axe define by "axe input" into a Scalar</desc>
                </function>
                <function>
                        <name>JoyButtonsSub</name>
                        <output type="MATRIX" shape="VECT">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>joybuttonsinput.svg</icon>
                        <desc>Read sensor_msgs/Joy.buttons and load value into a Matrix [Matrix dimension must be egal to the numbers of buttons into the Joy message; the number of Axes depends on the joystick used]</desc>
                </function>
                <function>
                        <name>JoyButtonSub</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>button</name>
                                        <desc>button is an integer value : this is the index of the button to read</desc>
                                </input>
                        </inputs>
                        <icon>joybuttoninput.svg</icon>
                        <desc>Read sensor_msgs/Joy.buttons and load value associated to the button define by "button input" into a Scalar</desc>
                </function>

		<function>
                        <name>LaserScanSub</name>
                        <output type="MATRIX" shape="VECT">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
				<input  type="SCALAR_SCALAR">
					<name>roll</name>
					<desc>Roll angle to apply to data (up if roll>0.5. Else down).</desc>
				</input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>range_max</name>
                                        <desc>Max Range [in meters] : values are projected between 0 and range_max</desc>
                                </input>
                        </inputs>
                        <icon>1d_lidar.svg</icon>
                        <desc>Read sensor_msgs/LaserScan.ranges and project values into a Matric [Output must be a VECTOR ROW=1 and Cols=N]</desc>
                </function>
		<function>
                        <name>PointCloud2Sub</name>
                        <output type="MATRIX">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>range_max</name>
                                        <desc>Max Range [in meters] : values are projected between 0 and range_max</desc>
                                </input>
                        </inputs>
                        <icon>1d_lidar.svg</icon>
                        <desc></desc>
                </function>
		<function>
			<name>Compass3DSub</name>
			<output type="MATRIX" shape="VECT">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>compass.svg</icon>
			<desc>Read sensor_msgs/Imu.orientation and load value into a 3D Vector.</desc>
		</function>
		 <function>
			<name>CompassXSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>compass.svg</icon>
			<desc>Read sensor_msgs/Imu.orientation quaternion, convert it into Euler, extract the X compass and load value into a Scalar.</desc>
		</function>
		 <function>
			<name>CompassYSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>compass.svg</icon>
			<desc>Read sensor_msgs/Imu.orientation quaternion, convert it into Euler, extract the Y compass and load value into a Scalar.</desc>
		</function>
		<function>
			<name>CompassZSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>compass.svg</icon>
			<desc>Read sensor_msgs/Imu.orientation quaternion, convert it into Euler, extract the Z compass and load value into a Scalar.</desc>
		</function>
		<function>
			<name>Gyroscope3DSub</name>
			<output type="MATRIX" shape="VECT">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>gyroscope.svg</icon>
			<desc>Read sensor_msgs/Imu.angular_velocity and load value into a 3D Vector.</desc>
		</function>
		 <function>
			<name>GyroscopeXSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>gyroscope.svg</icon>
			<desc>Read sensor_msgs/Imu.angular_velocity.x and load value into a Scalar.</desc>
		</function>
		 <function>
			<name>GyroscopeYSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>gyroscope.svg</icon>
			<desc>Read sensor_msgs/Imu.angular_velocity.y and load value into a Scalar.</desc>
		</function>
		<function>
			<name>GyroscopeZSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>gyroscope.svg</icon>
			<desc>Read sensor_msgs/Imu.angular_velocity.z and load value into a Scalar.</desc>
		</function>
		<function>
			<name>Accelerometer3DSub</name>
			<output type="MATRIX" shape="VECT">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>accelerometer.svg</icon>
			<desc>Read sensor_msgs/Imu.linear_acceleration and load value into a 3D Vector.</desc>
		</function>
		<function>
			<name>AccelerometerXSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>accelerometer.svg</icon>
			<desc>Read sensor_msgs/Imu.linear_acceleration.x and load value into a Scalar.</desc>
		</function>
		<function>
			<name>AccelerometerYSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>accelerometer.svg</icon>
			<desc>Read sensor_msgs/Imu.linear_acceleration.y and load value into a Scalar.</desc>
		</function>
		<function>
			<name>AccelerometerZSub</name>
			<output type="SCALAR">
			</output>
			<inputs>
				<input  type="STRING">
					<name>topic_name</name>
					<desc>Name of the topic to which the function subscribes </desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>size_queue</name>
					<desc>Size of the queue</desc>
				</input>
				<input  type="SCALAR_SCALAR">
					<name>sleep</name>
					<desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
				</input>
			</inputs>
			<icon>accelerometer.svg</icon>
			<desc>Read sensor_msgs/Imu.linear_acceleration.z and load value into a Scalar.</desc>
		</function>
		<function>
                        <name>NavSatFixSub</name>
                        <output type="MATRIX" shape="VECT">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
			<icon>Sat.svg</icon>
                        <desc>Read sensor_msgs/NavSatFix (latitude,longitude and altitude) and load value into a 3D Row or Col Vector.</desc>
                </function>
		<function>
                        <name>NavSatFixLatSub</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>Sat.svg</icon>
                        <desc>Read sensor_msgs/NavSatFix.latitude and load value into a Scalar.</desc>
                </function>
                <function>
                        <name>NavSatFixLongSub</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>Sat.svg</icon>
                        <desc>Read sensor_msgs/NavSatFix.longitude and load value into a Scalar.</desc>
                </function>
                <function>
                        <name>NavSatFixAltSub</name>
                        <output type="SCALAR">
                        </output>
                        <inputs>
                                <input  type="STRING">
                                        <name>topic_name</name>
                                        <desc>Name of the topic to which the function subscribes </desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>size_queue</name>
                                        <desc>Size of the queue</desc>
                                </input>
                                <input  type="SCALAR_SCALAR">
                                        <name>sleep</name>
                                        <desc>sleep duration [-1 : block until receive data ; 0 non-blocking call; N > 0 : sleep during N milliseconds]</desc>
                                </input>
                        </inputs>
                        <icon>Sat.svg</icon>
                        <desc>Read sensor_msgs/NavSatFix.altitude and load value into a Scalar.</desc>
		</function>
        </functions>
</description>

